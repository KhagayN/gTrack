## How to Graph Structural Variations
=====================================



.. sourcecode:: r
    

    ## this load sequences that have had coverage calculated from cancer cell lines (GRanges object, have to make into a gTrack)
    cov = readRDS('~/Dropbox/Vignettes/files/coverage.rds')
    
    ## wrap a gTrack around this, draw with blue circles, and label the track "Cov" and sets 0 as lower bound for all views 
    gt.cov = gTrack(cov, y.field = 'mean', circles = TRUE, col = 'blue', name = 'Cov')


::

    ## Error in eval(expr, envir, enclos): could not find function "gTrack"


.. sourcecode:: r
    

    ## this loads the junctions data from the cell line (GRangesList, where each item is a length 2 GRanges
    ## with strand information specifying the two locations and strands that are being fused) 
    junctions = readRDS('~/Dropbox/Vignettes/files/junctions.rds')
    
    ## loading the GENCODE gene model gTrack (hg19 pre-loaded comes with gTrack,
    ## but can be made from any .gff file from GENCODE (http://www.gencodegenes.org/releases/19.html)
    gt.ge = track.gencode()


::

    ## Error in eval(expr, envir, enclos): could not find function "track.gencode"


.. sourcecode:: r
    

    ## this loads a gTrack object of a genome graph i.e. network of the same cancer cell line (generated by JaBba)
    graph = readRDS('~/Dropbox/Vignettes/files/graph.rds')
    
    ## pick an interesting junction and plot the genes, coverage, and genome graph around it
    ## the links argument specifies the junctions that are being drawn
    window = junctions[[290]] + 1e5


::

    ## Loading required package: GenomicRanges



::

    ## Loading required package: BiocGenerics



::

    ## Loading required package: parallel



::

    ## 
    ## Attaching package: 'BiocGenerics'



::

    ## The following objects are masked from 'package:parallel':
    ## 
    ##     clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    ##     clusterExport, clusterMap, parApply, parCapply, parLapply,
    ##     parLapplyLB, parRapply, parSapply, parSapplyLB



::

    ## The following objects are masked from 'package:stats':
    ## 
    ##     IQR, mad, xtabs



::

    ## The following objects are masked from 'package:base':
    ## 
    ##     anyDuplicated, append, as.data.frame, cbind, colnames,
    ##     do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    ##     grepl, intersect, is.unsorted, lapply, lengths, Map, mapply,
    ##     match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,
    ##     Position, rank, rbind, Reduce, rownames, sapply, setdiff,
    ##     sort, table, tapply, union, unique, unsplit



::

    ## Loading required package: S4Vectors



::

    ## Loading required package: stats4



::

    ## 
    ## Attaching package: 'S4Vectors'



::

    ## The following objects are masked from 'package:base':
    ## 
    ##     colMeans, colSums, expand.grid, rowMeans, rowSums



::

    ## Loading required package: IRanges



::

    ## Loading required package: GenomeInfoDb



::

    ## Error in junctions[[290]]: this S4 class is not subsettable


.. sourcecode:: r
    

    plot(c(gt.ge, gt.cov, graph), window, links = junctions)


::

    ## Error in plot(c(gt.ge, gt.cov, graph), window, links = junctions): object 'gt.ge' not found



